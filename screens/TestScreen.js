import React, { useState } from 'react';
import { View, Text, TouchableOpacity, Image, StyleSheet } from 'react-native';
import { MaterialCommunityIcons, Feather } from '@expo/vector-icons';

const testData = [
{
    question: "–ö–∞–∫–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–º–µ—é—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ?",
    options: ["–¢–µ, —á—Ç–æ —Å–ø—Ä–∞–≤–∞", "–¢–µ, —á—Ç–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –¥–æ—Ä–æ–≥–µ", "–ü–µ—à–µ—Ö–æ–¥—ã"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–†–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ –æ–±–≥–æ–Ω—è—Ç—å –Ω–∞ –ø–µ—à–µ—Ö–æ–¥–Ω–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ?",
    options: ["–î–∞", "–ù–µ—Ç", "–¢–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤—â–∏–∫–∞"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –º–∏–≥–∞—é—â–∏–π –∂—ë–ª—Ç—ã–π —Å–∏–≥–Ω–∞–ª —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞?",
    options: ["–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–µ–∑–¥", "–í–Ω–∏–º–∞–Ω–∏–µ, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ", "–î–≤–∏–∂–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —ç—Ç–æ—Ç –∑–Ω–∞–∫: üî∫?",
    options: ["–ì–ª–∞–≤–Ω–∞—è –¥–æ—Ä–æ–≥–∞", "–£—Å—Ç—É–ø–∏—Ç–µ –¥–æ—Ä–æ–≥—É", "–î–≤–∏–∂–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ö–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º?",
    options: ["–ü–∞—Å–ø–æ—Ä—Ç", "–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –±—Ä–∞–∫–µ", "–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ"],
    correctIndex: 2,
    image: null,
  },
  {
    question: "–ö–∞–∫–æ–π –∑–Ω–∞–∫ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∞–≤—Ç–æ–º–∞–≥–∏—Å—Ç—Ä–∞–ª—å?",
    options: ["üöó", "üõ£Ô∏è", "üöß"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∑–Ω–∞–∫ —Å –∫—Ä–∞—Å–Ω—ã–º –∫—Ä—É–≥–æ–º –∏ –±–µ–ª–æ–π —Å–µ—Ä–µ–¥–∏–Ω–æ–π?",
    options: ["–î–≤–∏–∂–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ", "–°—Ç–æ—è–Ω–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞", "–£—Å—Ç—É–ø–∏—Ç–µ –¥–æ—Ä–æ–≥—É"],
    correctIndex: 0,
    image: null,
  },
  {
    question: "–†–∞–∑—Ä–µ—à–µ–Ω–∞ –ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ –º–æ—Å—Ç—É?",
    options: ["–î–∞", "–ù–µ—Ç", "–ï—Å–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–±—è–∑–∞–Ω —Å–¥–µ–ª–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–∏ –∞–≤–∞—Ä–∏–∏?",
    options: ["–£–µ—Ö–∞—Ç—å", "–°–æ–æ–±—â–∏—Ç—å –≤ –ì–ê–ò", "–£–±—Ä–∞—Ç—å –º–∞—à–∏–Ω—É"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ö–æ–≥–¥–∞ –≤–∫–ª—é—á–∞—é—Ç—Å—è –≥–∞–±–∞—Ä–∏—Ç–Ω—ã–µ –æ–≥–Ω–∏?",
    options: ["–ü—Ä–∏ —Ç—É–º–∞–Ω–µ", "–í–µ—á–µ—Ä–æ–º –∏ –Ω–æ—á—å—é", "–ü—Ä–∏ –µ–∑–¥–µ –ø–æ —Ç—Ä–∞—Å—Å–µ"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ö–∞–∫–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞ –∞–≤—Ç–æ–º–∞–≥–∏—Å—Ç—Ä–∞–ª–∏?",
    options: ["30 –∫–º/—á", "60 –∫–º/—á", "50 –∫–º/—á"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∑–Ω–∞–∫ üÖøÔ∏è?",
    options: ["–ü—Ä–æ–µ–∑–¥ –∑–∞–ø—Ä–µ—â–µ–Ω", "–ú–µ—Å—Ç–æ –¥–ª—è –ø–∞—Ä–∫–æ–≤–∫–∏", "–°—Ç–æ—è–Ω–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–†–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å —Å–ø–ª–æ—à–Ω—É—é –ª–∏–Ω–∏—é?",
    options: ["–ù–µ—Ç", "–î–∞", "–ï—Å–ª–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç"],
    correctIndex: 0,
    image: null,
  },
  {
    question: "–° –∫–∞–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –æ–±–≥–æ–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω –≤ –†–§?",
    options: ["–° –ª—é–±–æ–π", "–°–ª–µ–≤–∞", "–°–ø—Ä–∞–≤–∞"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∑–Ω–∞–∫ '–ø–µ—à–µ—Ö–æ–¥–Ω–∞—è –∑–æ–Ω–∞'?",
    options: ["–î–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–∞—à–∏–Ω", "–î–≤–∏–∂–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ", "–î–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—à–µ—Ö–æ–¥–æ–≤"],
    correctIndex: 2,
    image: null,
  },
  {
    question: "–ú–æ–∂–Ω–æ –ª–∏ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑–∞ —Ä—É–ª–µ–º?",
    options: ["–î–∞", "–ù–µ—Ç", "–ú–æ–∂–Ω–æ —Å –≥–∞—Ä–Ω–∏—Ç—É—Ä–æ–π"],
    correctIndex: 2,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –º–∏–≥–∞—é—â–∏–π –∫—Ä–∞—Å–Ω—ã–π —Å–∏–≥–Ω–∞–ª —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞?",
    options: ["–°—Ç–æ–ø, –æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ú–æ–∂–Ω–æ –µ—Ö–∞—Ç—å", "–ü–æ–≤–æ—Ä–æ—Ç –Ω–∞–ª–µ–≤–æ"],
    correctIndex: 0,
    image: null,
  },
  {
    question: "–ß—Ç–æ –æ–±—è–∑–∞–Ω —Å–¥–µ–ª–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –¥–≤–∏–∂–µ–Ω–∏—è?",
    options: ["–í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É", "–£–±–µ–¥–∏—Ç—å—Å—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", "–ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–∞"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ö–∞–∫–æ–π –∑–Ω–∞–∫ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –æ–±–≥–æ–Ω?",
    options: ["–°–∏–Ω–∏–π —Å –º–∞—à–∏–Ω–æ–π", "–ö—Ä–∞—Å–Ω—ã–π –∫—Ä—É–≥ —Å –¥–≤—É–º—è –º–∞—à–∏–Ω–∞–º–∏", "–ñ–µ–ª—Ç—ã–π –∫—Ä—É–≥"],
    correctIndex: 1,
    image: null,
  },
  {
    question: "–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –±–ª–∏–∂–Ω–∏–π —Å–≤–µ—Ç —Ñ–∞—Ä?",
    options: ["–¢–æ–ª—å–∫–æ –Ω–æ—á—å—é", "–í –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫", "–ü—Ä–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–µ–Ω–µ–µ 300 –º"],
    correctIndex: 2,
    image: null,
  },
];


export default function TestScreen({ navigation, route }) {
  // Variant raqami QuizScreen‚Äôdan keladi, agar yo‚Äòq bo‚Äòlsa 1 deb oling
  const variant = route?.params?.variant || 1;

  const [current, setCurrent] = useState(0);
  const [selected, setSelected] = useState(null); // tanlangan variant
  const [answered, setAnswered] = useState(Array(testData.length).fill(null)); // har bir savol uchun tanlangan variant

  const currentQ = testData[current];

  function handleSelect(idx) {
    if (selected !== null) return;
    setSelected(idx);

    const copy = [...answered];
    copy[current] = idx;
    setAnswered(copy);
  }

  function next() {
    if (current < testData.length - 1) {
      setCurrent(current + 1);
      setSelected(answered[current + 1]);
    }
  }

  function prev() {
    if (current > 0) {
      setCurrent(current - 1);
      setSelected(answered[current - 1]);
    }
  }

  function getOptionStyle(idx) {
    if (selected === null) return styles.option;
    if (idx === currentQ.correctIndex) return [styles.option, styles.correct];
    return [styles.option, styles.wrong];
  }

  return (
    <View style={styles.container}>
      {/* Yuqori panel */}
      <View style={styles.header}>
        <TouchableOpacity onPress={prev} disabled={current === 0}>
          <Feather name="arrow-left" size={32} color={current === 0 ? '#aaa' : '#1996D2'} />
        </TouchableOpacity>
        <Text style={styles.counter}>
          –í–∞—Ä–∏–∞–Ω—Ç {variant} | –í–æ–ø—Ä–æ—Å {current + 1} –∏–∑ {testData.length}
        </Text>
        <TouchableOpacity onPress={next} disabled={current === testData.length - 1}>
          <Feather name="arrow-right" size={32} color={current === testData.length - 1 ? '#aaa' : '#1996D2'} />
        </TouchableOpacity>
      </View>

      {/* Rasm */}
      <Image source={currentQ.image} style={styles.image} />

      {/* Savol matni */}
      <Text style={styles.question}>{currentQ.question}</Text>

      {/* Variantlar */}
      <View style={{ width: '100%', marginTop: 16 }}>
        {currentQ.options.map((text, idx) => (
          <TouchableOpacity
            key={idx}
            style={getOptionStyle(idx)}
            onPress={() => handleSelect(idx)}
            disabled={selected !== null}
            activeOpacity={0.8}
          >
            <Text style={styles.letter}>{String.fromCharCode(65 + idx)}</Text>
            <Text style={styles.optionText}>{text}</Text>
          </TouchableOpacity>
        ))}
      </View>

      {/* === QO'SHIMCHA: Oxirgi savolda va javob tanlanganda "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã" tugmasi chiqadi === */}
      {current === testData.length - 1 && selected !== null && (
        <TouchableOpacity
          style={{...styles.option, backgroundColor:'#20c933', marginTop: 18}}
          onPress={() => navigation.replace('Result', { answers: answered, testData })}
        >
          <Text style={{color:'#fff', fontSize:20, fontWeight:'bold'}}>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã</Text>
        </TouchableOpacity>
      )}
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 42,
    alignItems: 'center',
    backgroundColor: '#fff',
    paddingHorizontal: 10,
  },
  header: {
    width: '100%',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: 20,
    paddingHorizontal: 8,
  },
  counter: {
    fontSize: 17,
    fontWeight: '600',
    color: '#222',
  },
  image: {
    width: 220,
    height: 120,
    marginBottom: 15,
    borderRadius: 12,
    resizeMode: 'contain',
    backgroundColor: '#eef5fa',
  },
  question: {
    fontSize: 19,
    fontWeight: 'bold',
    color: '#222',
    textAlign: 'center',
    marginBottom: 10,
    paddingHorizontal: 8,
  },
  option: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#f7fbfe',
    borderRadius: 17,
    paddingVertical: 17,
    paddingHorizontal: 18,
    marginBottom: 16,
    borderWidth: 2,
    borderColor: '#1996D2',
  },
  letter: {
    fontWeight: 'bold',
    color: '#1996D2',
    fontSize: 22,
    marginRight: 14,
    width: 24,
    textAlign: 'center',
  },
  optionText: {
    fontSize: 17,
    color: '#222',
  },
  correct: {
    backgroundColor: '#c7f4d7',
    borderColor: '#20c933',
  },
  wrong: {
    backgroundColor: '#ffdbdb',
    borderColor: '#f54d4d',
  },
});
